#!/usr/bin/env bash
script_afp=$(realpath "${BASH_SOURCE[0]}")

# input guards

  env_must_be="tool_shared/bespoke游둘/env"
  error_bad_env=false
  error_not_sourced=false
  if [ "$ENV" != "$env_must_be" ]; then
    echo "$(script_fp):: error: must be run in the $env_must_be environment"
    error_bad_env=true
  fi
  if [[ "${BASH_SOURCE[0]}" == "$0" ]]; then
    echo "$script_afp:: This script must be sourced, not executed."
    error_not_sourced=true
  fi
  if $error_not_sourced; then exit 1; fi
  if $error_bad_env; then return 1; fi


#--------------------------------------------------------------------------------
# class/source paths

# ----
# Settings to debug to find failing tests on release candidate.
# See next section for settings for debugging the sources.

# note the possible aliasing between the Test_$PROJECT and release classes
export CLASSPATH=\
"$JAVA_HOME"/lib\
:"$REPO_HOME"/tester/config\
:"$REPO_HOME"/tester/jvm/Test_"$PROJECT".jar\
:"$REPO_HOME"/release/"$PROJECT".jar\
:"$CLASSPATH"

# note the developer sources on the scratchpad, if they are even there
# can be out of sync with those in the release jar
export SOURCEPATH=\
"$REPO_HOME"/tester/javac游둘/\
:"$REPO_HOME"/developer/scratchpad/\
:"$SOURCEPATH"

# ----
# for debugging developer sources
#
# export CLASSPATH=\
# "$JAVA_HOME"/lib\
# :"$REPO_HOME"/tester/config\
# :"$REPO_HOME"/tester/jvm/Test_"$PROJECT".jar\
# :"$REPO_HOME"/developer/scratchpad\
# :"$LOGGER_FACADE"
# :"$LOGGER"
# :"$CLASSPATH"

# developer must `distribute_source` for this to work
# export SOURCEPATH=\
# "$REPO_HOME"/tester/javac游둘/\
# :"$REPO_HOME"/developer/scratchpad\
# :"$SOURCEPATH"

# ----
# Another possible configuration is expand the developer release into scratchpad along with the tests. Then everything points at scratcpad. If the developer `distributed_source` to put the sources into the release candidate jar, the sources will be available in the debugger; however, editing them will not effect the developer's version (the origin version) of the sources.
#
# export CLASSPATH=\
# "$JAVA_HOME"/lib\
# :"$REPO_HOME"/tester/config\
# :"$REPO_HOME"/tester/scratchpad\
# :"$CLASSPATH"

# developer must `distribute_source` for this to work
# export SOURCEPATH=\
# "$REPO_HOME"/tester/javac游둘/\
# "$REPO_HOME"/tester/scratchpad/\
# :"$SOURCEPATH"

# end of the class/source path settings
#`--------------------------------------------------------------------------------

# so we can do testing

export PATH=\
"$REPO_HOME"/tester/tool游둘/\
:"$JAVA_HOME"/bin\
:"$PATH"


# so we can run individual built tests wrappers
#
export PATH=\
"$REPO_HOME"/tester/bash\
:"$PATH"


# misc

  # make .githolder and .gitignore visible
  alias ls="ls -a"

# some feedback to show all went well

  export PROMPT_DECOR="$PROJECT"_tester
  export ENV=$(script_fp)
  echo ENV "$ENV"
  cd "$REPO_HOME"/tester/
